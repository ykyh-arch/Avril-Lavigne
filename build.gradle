
configurations {
}

buildscript {
    ext {
        springBootVersion = "2.1.0.RELEASE"
    }
    repositories {
        maven { url "https://repo.spring.io/plugins-release" }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: "java-library"
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

group "com.avril"
version "4.4.0-SNAPSHOT"
description "这是基于Gradle构建的工程应用"

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

allprojects{
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    //options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
    jcenter()
}

ext {
    springfoxSwagger2Version = "2.9.2"
}

dependencies{

    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2"
    implementation "com.github.pagehelper:pagehelper-spring-boot-starter:1.2.5"
    implementation "com.alibaba:druid-spring-boot-starter:1.1.22"
    implementation("com.github.penggle:kaptcha:2.3.2"){
        exclude group: "javax.servlet-api", module: "javax.servlet"
    }

    implementation "org.springframework:spring-context-support:5.1.9.RELEASE"
    implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}"
    implementation "org.apache.shiro:shiro-core:${shiroVersion}"
    implementation "org.apache.shiro:shiro-spring:${shiroVersion}"
    implementation "org.apache.shiro:shiro-ehcache:${shiroVersion}"
    implementation "io.springfox:springfox-swagger-ui:${springfoxSwagger2Version}"
    implementation("io.springfox:springfox-swagger2:${swaggerVersion}"){
        exclude group: "io.swagger", module: "swagger-annotations"
        exclude group: "io.swagger", module: "swagger-models"
    }

    implementation "io.swagger:swagger-annotations:1.5.23"
    implementation "io.swagger:swagger-models:1.5.23"

    implementation "mysql:mysql-connector-java:8.0.17"
    implementation "com.github.pagehelper:pagehelper:5.1.10"
    implementation "org.apache.commons:commons-lang3:3.9"
    implementation "commons-io:commons-io:2.5"
    implementation "commons-fileupload:commons-fileupload:1.4"
    implementation "com.github.theborakompanioni:thymeleaf-extras-shiro:2.0.0"
    implementation ("org.quartz-scheduler:quartz:2.3.1"){
        exclude group: "com.mchange", module: "c3p0"
    }
    implementation "com.alibaba:fastjson:1.2.60"
    //解析客户端操作系统、浏览器等
    implementation "eu.bitwalker:UserAgentUtils:1.21"
    implementation "org.apache.velocity:velocity:1.7"
    implementation "com.github.oshi:oshi-core:4.0.0"
    implementation "net.java.dev.jna:jna:5.4.0"
    implementation "net.java.dev.jna:jna-platform:5.4.0"
    implementation "org.jsoup:jsoup:1.12.1"
    implementation "org.apache.poi:poi-ooxml:4.1.0"
    implementation "cn.hutool:hutool-extra:4.6.4"
    implementation 'org.testng:testng:6.14.3'
    implementation 'org.testng:testng:6.14.3'
    implementation 'org.testng:testng:6.14.3'
    implementation 'org.apache.logging.log4j:log4j-core:2.11.2'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
    compileOnly "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    testCompile "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

bootJar {
    baseName = "avril"
    version = "4.4.0-SNAPSHOT"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
        html.destination = new File("${buildDir}/jacocoHtml")
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/common/cons/Regex.class'
            ])
        })
    }
}

check.dependsOn jacocoTestReport
